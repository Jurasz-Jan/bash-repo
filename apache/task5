#!/bin/bash

# Sprawdzenie, czy podano właściwą liczbę argumentów
if [ $# -ne 2 ]; then
    echo "Użycie: $0 logfile.log N"
    exit 1
fi

logfile="$1"
threshold="$2"

# Sprawdzenie, czy plik istnieje
if [ ! -f "$logfile" ]; then
    echo "Plik $logfile nie istnieje."
    exit 1
fi

# Sprawdzenie, czy N jest liczbą
if ! [[ "$threshold" =~ ^[0-9]+$ ]]; then
    echo "Błąd: N musi być liczbą."
    exit 1
fi

# Przetwarzanie logów
awk -v threshold="$threshold" '
    {
        # Wyciągnięcie daty, godziny i IP
        match($4, /\[([0-9]{2}\/[A-Za-z]+\/[0-9]{4}):([0-9]{2}):/, timestamp)
        date = timestamp[1]
        hour = timestamp[2]
        ip = $1

        # Zliczanie żądań dla danego IP w danej godzinie
        request_count[ip " " hour " " date]++
    }
    END {
        # Przeglądanie wszystkich zebranych danych
        for (key in request_count) {
            if (request_count[key] > threshold) {
                split(key, parts, " ")
                ip = parts[1]
                hour = parts[2]
                date = parts[3]

                # Generowanie zakresu godzin
                start_time = sprintf("%02d:00:00", hour)
                end_time = sprintf("%02d:00:00", hour + 1)

                # Obsługa ostatniej godziny (23:00:00-24:00:00)
                if (hour == 23) {
                    end_time = "24:00:00"
                }

                # Wyświetlanie wyników
                print ip, start_time "-" end_time, date, request_count[key]
            }
        }
    }
' "$logfile" | sort -k4,4nr -k1 | head -n 10
